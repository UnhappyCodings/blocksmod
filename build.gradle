buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://noeppi-noeppi.github.io/MinecraftUtilities/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath 'io.github.noeppi_noeppi.tools:ModGradle:2.0.9'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'io.github.noeppi_noeppi.tools.modgradle.mapping'

group = 'de.unhappycodings'
version = "${mod_version}"

java {
    archivesBaseName = 'blocksmod'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: "${mappings_channel}", version: "${mappings_version}"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            forceExit = false

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'

            args "--username", "${username}"
            args "--uuid", "${uuid}"

            mods {
                blocksmod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            forceExit = false

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'

            mods {
                blocksmod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            forceExit = false

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'blocksmod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                blocksmod {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/"
    }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    implementation fg.deobf("curse.maven:jer-${jer_version}")
    implementation fg.deobf("curse.maven:jei-${jei_version}")
    implementation fg.deobf("curse.maven:conf-${conf_version}")
    implementation fg.deobf("curse.maven:architectury-${architectury_version}")
    implementation fg.deobf("curse.maven:kotlin-${kotlin_version}")
    implementation fg.deobf("curse.maven:observable-${observable_version}")
    implementation fg.deobf('software.bernie.geckolib:geckolib-1.18-forge:3.0.13')
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.name,
                "Specification-Vendor"    : "UnhappyWithoutU",
                "Specification-Version"   : "${mod_version}", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${mod_version}",
                "Implementation-Vendor"   : "UnhappyWithoutU",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')
